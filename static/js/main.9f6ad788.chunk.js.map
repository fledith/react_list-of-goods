{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","minLengths","Array","fill","map","_","i","App","state","isStarted","isReversed","sortType","NONE","selected","isSortedByLength","isSortedAlphabetically","getReorderedGoods","goods","visibleGoods","filter","good","length","sort","f","s","ALPHABET","localeCompare","LENGTH","reverse","startedSort","setState","sortByLength","sortAlphabetically","revers","handleChangeSelect","event","target","value","reset","this","className","type","onClick","name","onChange","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,kEAfCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAa,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,M,SAEtDP,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAeE,IAAMQ,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUZ,EAASa,KACnBC,SAAU,EACVC,kBAAkB,EAClBC,wBAAwB,GAP5B,EAUEC,kBAAoB,SAClBC,EACAN,EACAD,EACAG,EACAC,EACAC,GAEA,IAAMG,EAAeD,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUR,KAkBzD,OAfAK,EAAaI,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,KAAKZ,EAAS0B,SACZ,OAAOV,EACHQ,EAAEG,cAAcF,GAChBA,EAAEE,cAAcH,GACtB,KAAKxB,EAAS4B,OACZ,OAAOb,EACHS,EAAEF,OAASG,EAAEH,OACbG,EAAEH,OAASE,EAAEF,OACnB,QACE,OAAO,MAINX,EACHQ,EAAaU,UACbV,GAtCR,EAyCEW,YAAc,kBACZ,EAAKC,SAAS,CAAErB,WAAW,KA1C/B,EA6CEsB,aAAe,kBACb,EAAKD,UAAS,SAACtB,GAAD,MAAY,CACxBG,SAAUZ,EAAS4B,OACnBb,kBAAmBN,EAAMM,sBAhD/B,EAoDEkB,mBAAqB,kBACnB,EAAKF,UAAS,SAACtB,GAAD,MAAY,CACxBG,SAAUZ,EAAS0B,SACnBV,wBAAyBP,EAAMO,4BAvDrC,EA2DEkB,OAAS,kBACP,EAAKH,UAAS,SAAAtB,GAAK,MAAK,CAAEE,YAAaF,EAAME,gBA5DjD,EA+DEwB,mBAAqB,SAACC,GAAD,OACnB,EAAKL,SAAS,CAAEjB,UAAWsB,EAAMC,OAAOC,SAhE5C,EAmEEC,MAAQ,kBACN,EAAKR,SACH,CAAEnB,SAAUZ,EAASa,KAAMF,YAAY,EAAOG,SAAU,KArE9D,4CAyEE,WACE,MAOI0B,KAAK/B,MANPC,EADF,EACEA,UACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,SACAE,EAJF,EAIEA,SACAC,EALF,EAKEA,iBACAC,EANF,EAMEA,uBAEIE,EAAQsB,KAAKvB,kBACjBhB,EACAW,EACAD,EACAG,EACAC,EACAC,GAGF,OACE,sBAAKyB,UAAU,eAAf,WACI/B,GACA,wBACEgC,KAAK,SACLD,UAAU,iCACVE,QAASH,KAAKV,YAHhB,mBASDpB,GACC,qCACE,sBAAK+B,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKP,mBAHhB,iCAQA,wBACES,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKR,aAHhB,4BAQA,wBACEU,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKN,OAHhB,qBAQA,wBACEQ,KAAK,SACLD,UAAU,gCACVE,QAASH,KAAKD,MAHhB,mBAQA,wBACEK,KAAK,YACLH,UAAU,oBACVH,MAAOxB,EACP+B,SAAUL,KAAKL,mBAJjB,SAMGjC,EAAWG,KAAI,SAAAiB,GAAM,OACpB,wBAAQgB,MAAOhB,EAAf,SACGA,GADyBA,WAOlC,oBAAImB,UAAU,QAAd,SACGvB,EAAMb,KAAI,SAAAgB,GAAI,OACb,oBAAIoB,UAAU,cAAd,SACGpB,GAD8BA,kBA1JjD,GAAyByB,aC9BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9f6ad788.chunk.js","sourcesContent":["import { ChangeEvent, Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst minLengths = new Array(10).fill(0).map((_, i) => i + 1);\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  selected: number,\n  isSortedByLength: boolean,\n  isSortedAlphabetically: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    selected: 1,\n    isSortedByLength: false,\n    isSortedAlphabetically: false,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    sortType: SortType,\n    isReversed: boolean,\n    selected: number,\n    isSortedByLength: boolean,\n    isSortedAlphabetically: boolean,\n  ) => {\n    const visibleGoods = goods.filter(good => good.length <= selected);\n\n    // f equal first word and s equal second word\n    visibleGoods.sort((f, s) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return isSortedAlphabetically\n            ? f.localeCompare(s)\n            : s.localeCompare(f);\n        case SortType.LENGTH:\n          return isSortedByLength\n            ? f.length - s.length\n            : s.length - f.length;\n        default:\n          return 0;\n      }\n    });\n\n    return isReversed\n      ? visibleGoods.reverse()\n      : visibleGoods;\n  };\n\n  startedSort = () => (\n    this.setState({ isStarted: true })\n  );\n\n  sortByLength = () => (\n    this.setState((state) => ({\n      sortType: SortType.LENGTH,\n      isSortedByLength: !state.isSortedByLength,\n    }))\n  );\n\n  sortAlphabetically = () => (\n    this.setState((state) => ({\n      sortType: SortType.ALPHABET,\n      isSortedAlphabetically: !state.isSortedAlphabetically,\n    }))\n  );\n\n  revers = () => (\n    this.setState(state => ({ isReversed: !state.isReversed }))\n  );\n\n  handleChangeSelect = (event: ChangeEvent<HTMLSelectElement>) => (\n    this.setState({ selected: +event.target.value })\n  );\n\n  reset = () => (\n    this.setState(\n      { sortType: SortType.NONE, isReversed: false, selected: 1 },\n    )\n  );\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n      selected,\n      isSortedByLength,\n      isSortedAlphabetically,\n    } = this.state;\n    const goods = this.getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n      selected,\n      isSortedByLength,\n      isSortedAlphabetically,\n    );\n\n    return (\n      <div className=\"App is-light\">\n        {!isStarted && (\n          <button\n            type=\"button\"\n            className=\"button is-success button-start\"\n            onClick={this.startedSort}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"button is-dark\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-dark\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-dark\"\n                onClick={this.revers}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-danger button-reset\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n\n              <select\n                name=\"minLength\"\n                className=\"select is-primary\"\n                value={selected}\n                onChange={this.handleChangeSelect}\n              >\n                {minLengths.map(length => (\n                  <option value={length} key={length}>\n                    {length}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}