{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","sort","f","s","ALPHABET","localeCompare","LENGTH","length","reverse","startedSort","setState","sortByLength","sortAlphabetically","revers","reset","this","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,yEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAYE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,kBAAoB,SAClBC,EACAH,EACAD,GAEA,IAAMK,EAAY,YAAOD,GAczB,OAXAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKN,EAASc,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAINZ,EAAaK,EAAaQ,UAAYR,GA1BjD,EA6BES,YAAc,kBAAM,EAAKC,SAAS,CAAEhB,WAAW,KA7BjD,EA+BEiB,aAAe,kBAAM,EAAKD,SAAS,CAAEd,SAAUN,EAASgB,UA/B1D,EAiCEM,mBAAqB,kBAAM,EAAKF,SAAS,CAAEd,SAAUN,EAASc,YAjChE,EAmCES,OAAS,kBAAM,EAAKH,UAAS,SAAAjB,GAAK,MAAK,CAAEE,YAAaF,EAAME,gBAnC9D,EAqCEmB,MAAQ,kBAAM,EAAKJ,SAAS,CAAEd,SAAUN,EAASO,KAAMF,YAAY,KArCrE,4CAuCE,WACE,MAA4CoB,KAAKtB,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBG,EAAQgB,KAAKjB,kBAAkBP,EAAiBK,EAAUD,GAEhE,OACE,sBAAKqB,UAAU,eAAf,WACItB,GACA,wBACEuB,KAAK,SACLD,UAAU,iCACVE,QAASH,KAAKN,YAHhB,mBASDf,GACC,qCACE,sBAAKsB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKH,mBAHhB,iCAQA,wBACEK,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKJ,aAHhB,4BAQA,wBACEM,KAAK,SACLD,UAAU,iBACVE,QAASH,KAAKF,OAHhB,qBAQA,wBACEI,KAAK,SACLD,UAAU,gCACVE,QAASH,KAAKD,MAHhB,sBASF,oBAAIE,UAAU,QAAd,SACGjB,EAAMoB,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAU,cAAd,SAAwCI,GAAPA,kBA7FjD,GAAyBC,aCzBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19142be8.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    sortType: SortType,\n    isReversed: boolean,\n  ) => {\n    const visibleGoods = [...goods];\n\n    // f equal first word and s equal second word\n    visibleGoods.sort((f, s) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return f.localeCompare(s);\n        case SortType.LENGTH:\n          return f.length - s.length;\n        default:\n          return 0;\n      }\n    });\n\n    return isReversed ? visibleGoods.reverse() : visibleGoods;\n  };\n\n  startedSort = () => this.setState({ isStarted: true });\n\n  sortByLength = () => this.setState({ sortType: SortType.LENGTH });\n\n  sortAlphabetically = () => this.setState({ sortType: SortType.ALPHABET });\n\n  revers = () => this.setState(state => ({ isReversed: !state.isReversed }));\n\n  reset = () => this.setState({ sortType: SortType.NONE, isReversed: false });\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const goods = this.getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App is-light\">\n        {!isStarted && (\n          <button\n            type=\"button\"\n            className=\"button is-success button-start\"\n            onClick={this.startedSort}\n          >\n            Start\n          </button>\n        )}\n\n        {isStarted && (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"button is-dark\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-dark\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-dark\"\n                onClick={this.revers}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"button is-danger button-reset\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"Goods\">\n              {goods.map(good => (\n                <li className=\"Goods__item\" key={good}>{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}